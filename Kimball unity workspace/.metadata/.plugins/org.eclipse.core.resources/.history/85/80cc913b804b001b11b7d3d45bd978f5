package kimball;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Properties;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.junit.Assert;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import pageObjects.CarePlanObj;

public class CarePlan extends base {
	public WebDriver driver;
	public static Logger log =LogManager.getLogger(CarePlan.class.getName());
	Properties prop;
	FileInputStream fis;
	
	@BeforeTest
	public void initialize() throws IOException
	{
		prop = new Properties();
		fis= new FileInputStream("D:\\selenium projects\\Kimball unity workspace\\Unity\\src\\main\\java\\kimball\\data.properties");
		prop.load(fis);
		driver=initializeDriver();
		log.info("driver is initialized");
		String URLName=prop.getProperty("URL");
		driver.get(URLName);
		log.info("Navigated to login page");
		
	}
	
	
	@Test
	public void SaveCarePlan() throws Exception
	{
		
		UnityLogin Login= new UnityLogin();
		Login.basePageNavigation();
		ArrayList<String> tabs2 = new ArrayList<String> (driver.getWindowHandles());
	    driver.switchTo().window(tabs2.get(1));
		CarePlanObj CP = new CarePlanObj(driver);
	    CP.getCarePlanTab().click();
	    log.debug("user clicks on careplan tab");
	    CP.getAnticipatedCaseButton().click();
	    Select anticipated = new Select(CP.getAnticipateSuggestDropdown());
	    prop = new Properties();
		fis= new FileInputStream("D:\\selenium projects\\Kimball unity workspace\\Unity\\src\\main\\java\\kimball\\data.properties");
		prop.load(fis);
		String AntiCipateValue=prop.getProperty("AntiCipatedValue");
	    anticipated.selectByValue(AntiCipateValue);
	    CP.getAntiCipatedTargetDate().click();
	    CP.getAntiCipatedActiveDate().click();
	    CP.getAntiCipatedSaveButton().click();
	   // WebElement error= driver.findElement(By.xpath("//*[@id='anticipated-case-results']//*[text()=' No anticipated case results ']"));
	    String Actual=CP.getAntiCipatedSavedAssert().getText();
	    String expect="The Claimant will reach MMI";
	    System.out.println(Actual);
	    Assert.assertEquals(expect, Actual);
	    log.debug("user saves AntiCipate section");
	    log.info("user successfully saves anticipated case results");
	    CP.getCaseManagementButton().click();
	    Select CaseManage = new Select(CP.getCaseManageSuggestDropdown());
	    String CaseManagemenValue=prop.getProperty("CaseManageValue");
	    CaseManage.selectByValue(CaseManagemenValue);
	    CP.getDateIdentifiedDate().click();
	    CP.getAntiCipatedActiveDate().click();
	    CP.getCaseManagementSaveButton().click();
	    String ActualCaseMange=CP.getCaseManageSavedAssert().getText();
	    String ExpectCaseMange="Alteration in comfort related to";
	    System.out.println(ActualCaseMange);
	    Assert.assertEquals(ExpectCaseMange, ActualCaseMange);
	    log.debug("user saves CaseManagement issues");
	    log.info("user successfully saves case management issues");
	    CP.getCaseManagementGoalButton().click();
	    Select CaseGoalType= new Select(CP.getCaseMGoalType());
	    String CaseManGoalType=prop.getProperty("CaseManageGoalType");
	    CaseGoalType.selectByValue(CaseManGoalType);
	    Thread.sleep(2000);
	    Select CaseMGaolSugg= new Select(CP.getCaseManageGoalSuggestDropdown());
	    //String CaseGaolSugg= prop.getProperty("CaseManageGaolSugg");
	    CaseMGaolSugg.selectByIndex(2);
	    CP.getDateIdentifiedDate().click();
	    CP.getAntiCipatedActiveDate().click();
	    CP.getAntiCipatedTargetDate().click();
	    CP.getAntiCipatedActiveDate().click();
	    Select status= new Select(CP.getCaseMStatusDropDown());
	    String CaseMGoalTyp= prop.getProperty("CaseManageGoalType");
	    status.selectByValue(CaseMGoalTyp);
	    CP.getCaseNotMetReason().sendKeys("Test QA");
	    CP.getCaseMGoalSaveButton().click();
	    String ActualCaseMangeGoal=CP.getCaseManageGoalSavedAssert().getText();
	    String ExpectCaseMangeGoal=" Claimant will improve and begin to display a positive attitude towards vocational services";
	    System.out.println(ActualCaseMangeGoal);
	    Assert.assertEquals(ExpectCaseMangeGoal, ActualCaseMangeGoal);
	    log.debug("user saves CaseManagement goals");
	    log.info("user successfully saves case management goals");
	    
	    
	    
	    
	}
	
	@AfterTest
	public void closeBrowser()
	{
		driver.quit();
	}

}
